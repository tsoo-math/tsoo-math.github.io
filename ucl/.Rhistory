x
}
x=replicate(10000, arfix())
x=replicate(10000, arfix())
}
sample(2, 52, replace=FALSE)
sample(52, 2, replace=FALSE)
deck = seq(1,52, 1)
deck[22]
deck[48]
deck
deck[22] <- 9
deck[22]
deck
T
xsample(52, 2, replace=FALSE)
x=sample(52, 2, replace=FALSE)
x
u00 = runif(1)
x=-1
i=0
while(x==-1){
i<-i+1
if( u00 <=0.2*i){x<-i}
}
x
x
x
u00 = runif(1)
x=-1
i=0
while(x==-1){
i<-i+1
if( u00 <=0.2*i){x<-i}
}
x
u00 = runif(1)
x=-1
i=0
while(x==-1){
i<-i+1
if( u00 <=0.2*i){x<-i}
}
x
u00 = runif(1)
x=-1
i=0
while(x==-1){
i<-i+1
if( u00 <=0.2*i){x<-i}
}
x
x
u00 = runif(1)
x=-1
i=0
while(x==-1){
i<-i+1
if( u00 <=0.2*i){x<-i}
}
x
x
u00 = runif(1)
x=-1
i=0
while(x==-1){
i<-i+1
if( u00 <=0.2*i){x<-i}
}
x
u00 = runif(1)
x=-1
i=0
while(x==-1){
i<-i+1
if( u00 <=0.2*i){x<-i}
}
x
u00 = runif(1)
x=-1
i=0
while(x==-1){
i<-i+1
if( u00 <=0.2*i){x<-i}
}
x
u00 = runif(1)
x=-1
i=0
while(x==-1){
i<-i+1
if( u00 <=0.2*i){x<-i}
}
x
P <- matrix(c(0, 1/2, 1/2, 0, 0, 1/2, 0,0,0,1/2, 1/2,0,0, 1/2, 0, 0,0,0,1/2, 1/2, 1/3, 1/3, 0, 0, 1/3), nrow =5)
P <-t(P)
P
P[1,1\]
P[1,1]
P[1,2]
P[1,5]
P[i, ]
v = c(0,1, 0.2, 1)
v
cumsum(v)
step(i)<- function(i){
q = P[i,]
x=-1
u = runif(1)
j=0
cumq = cumsum(q)
while(x==-1){
j<-j+1
if(u <= cumq[j]){x <-j}
}
x
}
step <- function(i){
q = P[i,]
x=-1
u = runif(1)
j=0
cumq = cumsum(q)
while(x==-1){
j<-j+1
if(u <= cumq[j]){x <-j}
}
x
}
step(2)
step(2)
step(2)
step(2)
step(2)
step(2)
step(2)
step <- function(i){
q = P[i,]
x=-1
u = runif(1)
j=0
cumq = cumsum(q)
while(x==-1){
j<-j+1
if(u <= cumq[j]){x <-j}
}
x
}
step <- function(i){
q = P[i,]
x=-1
u = runif(1)
j=0
cumq = cumsum(q)
while(x==-1){
j<-j+1
if(u <= cumq[j]){x <-j}
}
x
}
step(1)
step(3)
```{r}
u00 = runif(1)
x=-1
i=0
while(x==-1){
i<-i+1
if( u00 <=0.2*i){x<-i}
}
x
P <- matrix(c(0, 1/2, 1/2, 0, 0, 1/2, 0,0,0,1/2, 1/2,0,0, 1/2, 0, 0,0,0,1/2, 1/2, 1/3, 1/3, 0, 0, 1/3), nrow =5)
P <-t(P)
P
step <- function(i){
q = P[i,]
x=-1
u = runif(1)
j=0
cumq = cumsum(q)
while(x==-1){
j<-j+1
if(u <= cumq[j]){x <-j}
}
x
}
x <- c(x, step(x))
x
for (i in 1:100) {
x <- c(x, step(x))
}
x
P
q = P[5,]
q
cumsum(q)
P[5,1]
P[5,1]
P
P[5,]
step(1)
step(2)
step(3)
step(4)
step(5)
step(6)
initial <- function(){
u = runif(1)
x=-1
k=0
while(x==-1){
k<-k+1
if( u <=0.2*k){x<-k}
}
x
}
initial <- function(){
u = runif(1)
x=-1
k=0
while(x==-1){
k<-k+1
if( u <=0.2*k){x<-k}
}
x
}
initil()
initial()
initial()
initial()
initial()
initial()
initial()
initial()
initial()
initial()
initial()
initial()
initial()
initial()
initial()
initial()
initial()
initial()
initial()
initial()
initial()
initil()
initil()
initial()
initial()
initial()
initial()
initil()
initil()
initial()
initial()
initial()
initial()
initial()
initial()
initial()
initial()
initial()
initial()
initial()
initial()
initial()
step(5)
step(1)
step(3)
step(4)
step(5)
step(5)
step(2)
step(1)
step(2)
step(5)
stepsind<- function(){
x=1
y=5
while(x[length(x)] != y[length(y)] ){
x< - c(x, step(x[length(x)]))
y< - c(y, step(y[length(x)]))
}
c(x,y)
}
stepsind()
x =c(1,2)
y = c(2,3)
x[length(x)]
y[length(x)]
P <- matrix(c(0, 1/2, 1/2, 0, 0, 1/2, 0,0,0,1/2, 1/2,0,0, 1/2, 0, 0,0,0,1/2, 1/2, 1/3, 1/3, 0, 0, 1/3), nrow =5)
P <-t(P)
step <- function(i){
q = P[i,]
x=-1
u = runif(1)
j=0
cumq = cumsum(q)
while(x==-1){
j<-j+1
if(u <= cumq[j]){x <-j}
}
x
}
step(1)
step(1)
step(1)
step(1)
step(1)
step(1)
step(3)
step(4)
step(5)
step(5)
step(5)
step(5)
step(5)
step(5)
step(5)
step(5)
step(5)
step(5)
step(5)
step(4)
x <- c(x, step(x[length(x)]))
x
x <- c(x, step(x[length(x)]))
x
x <- c(x, step(x[length(x)]))
x <- c(x, step(x[length(x)]))
x
x[length(x)] != y[length(y)]
x[length(x)] != 5
x=1
y=5
x
y
x< - c(x, step(x[length(x)]))
y< - c(y, step(y[length(y)]))
x<- c(x, step(x[length(x)]))
y<- c(y, step(y[length(y)]))
c(x,y)
z=c(x,y)
z
x = c(1,2)
y = c(2,1)
all(x==y)
all(x==y) == TRUE
all(x==y) == TRUE
sample(4,4, replace=FALSE)
sample(4,4, replace=FALSE)
sample(4,4, replace=FALSE)
sample(4,4, replace=FALSE)
sample(4,4, replace=FALSE)
sample(4,4, replace=FALSE)
sample(4,4, replace=FALSE)
seq(1,4,1)
x = seq(1,4,1)
x
x[3]
shuffle <- function(x){
t=sample(4, 2, replace=FALSE)
a=t[1]
b=t[2]
da = x[a]
db = x[b]
x[a] <- db
x[b] <- da
x
}
shuffle (sample(4,4, replace=FALSE))
shuffle (sample(4,4, replace=FALSE))
shuffle (sample(4,4, replace=FALSE))
all(x==y) = TRUE
x = c(1,2)
y = (2,1)
y = c(2,1)
all(x==y)
all(x==y) =FALSE
all(x==y) ==FALSE
x = c(1,2)
y = c(1,2)
all(x==y)
all(x==y) == TRUE
all(x==y) == FALSE
x = c(1,1,2)
y = c(1,1,3)
all(x==y)
sample(4,2, replace=FALSE)
sample(4,2, replace=FALSE)
sample(4,2, replace=FALSE)
deckx = seq(1,4,1)
decky = sample(4,4,replace=FALSE)
while( all(deckx== decky)==FALSE ){
decky <- sample(4,4, replace=FALSE)
n <-n+1
}
n=0
deckx = seq(1,4,1)
decky = sample(4,4,replace=FALSE)
while( all(deckx== decky)==FALSE ){
decky <- sample(4,4, replace=FALSE)
n <-n+1
}
n
n=0
deckx = seq(1,4,1)
decky = sample(4,4,replace=FALSE)
while( all(deckx== decky)==FALSE ){
decky <- sample(4,4, replace=FALSE)
n <-n+1
}
n
n=0
deckx = seq(1,4,1)
decky = sample(4,4,replace=FALSE)
while( all(deckx== decky)==FALSE ){
decky <- sample(4,4, replace=FALSE)
n <-n+1
}
n
n=0
deckx = seq(1,4,1)
decky = sample(4,4,replace=FALSE)
while( all(deckx== decky)==FALSE ){
decky <- sample(4,4, replace=FALSE)
n <-n+1
}
n
n=0
deckx = seq(1,4,1)
decky = sample(4,4,replace=FALSE)
while( all(deckx== decky)==FALSE ){
decky <- sample(4,4, replace=FALSE)
n <-n+1
}
n
shuffle(c(1,2,3,4))
shuffle(c(1,2,3,4))
shuffle(c(1,2,3,4))
shuffle(c(1,2,3,4))
shuffle(c(1,2,3,4))
shuffle(c(1,2,3,4))
deck = seq(1,3, 1)
deck
shuffle <- function(x){
t=sample(3, 2, replace=FALSE)
a=t[1]
b=t[2]
da = x[a]
db = x[b]
x[a] <- db
x[b] <- da
x
}
shuffle(c(1,2,3)
)
shuffle(c(1,2,3))
shuffle(c(1,2,3))
shuffle(c(1,2,3))
shuffle(c(1,2,3))
shuffle(c(1,2,3))
shuffle(c(1,2,3))
shuffle(c(1,2,3))
shuffle(c(1,2,3))
shuffle(c(1,2,3))
shuffle(c(1,2,3))
shuffle(c(1,2,3))
shuffle(c(1,2,3))
shuffle(c(1,2,3))
shuffle(c(1,2,3))
shuffle(c(1,2,3))
sample(3,3, replace=FALSE)
sample(3,3, replace=FALSE)
sample(3,3, replace=FALSE)
all( c(1,2,3) == c(2,1,2))
all( c(1,2,3) == c(2,1,2))
shuffle <- function(x){
if(rbinom(1,1,0.5) ==1 ){
t=sample(4, 2, replace=FALSE)
a=t[1]
b=t[2]
da = x[a]
db = x[b]
x[a] <- db
x[b] <- da
}
x
}
shuffle( c(1,2,3,4))
shuffle( c(1,2,3,4))
shuffle( c(1,2,3,4))
shuffle( c(1,2,3,4))
shuffle( c(1,2,3,4))
shuffle( c(1,2,3,4))
shuffle( c(1,2,3,4))
shuffle( c(1,2,3,4))
shuffle( c(1,2,3,4))
shuffle( c(1,2,3,4))
shuffle( c(1,2,3,4))
shuffle( c(1,2,3,4))
shuffle( c(1,2,3,4))
shuffle( c(1,2,3,4))
shuffle( c(1,2,3,4))
x = c(1,2)
y = c(2,3)
matrix(x,y)
matrix(x,y, nrow=2)
matrix(c(x,y))
matrix(c(x,y), nrow=2)
